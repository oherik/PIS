QA12 - MC68HC12 Absolute crossassembler, Version 1.6.3
(c) GMV 1989-2013


File: Main.lst
                            1. 	use	Labdefs.s12
---- File: "Labdefs.s12"
                            2. ;Adresser
       0000 0600            3. DipSwitch	equ	$600
       0000 0700            4. HexDisplay	equ	$700
       0000 0400            5. DrillControl	equ	$400
       0000 0401            6. DrillStatus	equ	$401
                            7. 
000000                      8. #ifdef	SIMULATOR
                           14. #else
       0000 0004           15. DelayConst	EQU	4
                           16. #endif000000                     17. 	
---- File: "C:\Users\Erik\Documents\GitHub\PIS\Bokuppgifter\Main.s12"
001000                     18. 	org	$1000
001000                     19. 	
                           20. ;----------------------------------
                           21. ;	MAIN
                           22. ;----------------------------------	
001000                     23. 	
001000                     24. main_loop:
001000 16 10 1E            25. 	jsr	GetKbdML15	; Tangent till register B
001003 16 10 08            26. 	jsr	Command
001006 20 F8               27. 	bra	main_loop
001008                     28. 	
                           29. ;----------------------------------
                           30. ;	COMMAND
                           31. ;----------------------------------	
                           32. 
001008                     33. Command:
001008 C1 07               34. 	cmpb	#7
00100A 22 08               35. 	bhi	CommandExit
00100C CE 10 15            36. 	ldx	#JUMPTAB
00100F 58                  37. 	aslb		; 2 bytes per adress
001010                     38. 	ldx	b,x	; ladda rutinen
001012 15 00               39. 	jsr	,x
001014                     40. CommandExit:
001014 3D                  41. 	rts
                           42. 
                           43. ;---------------------------------
                           44. ;	Tabell med kommandon
                           45. 
001015 10 4F 10 6B 10 31   46. JUMPTAB	fdb	MotorStart,MotorStop,SUB2,SUB3
       10 37            
00101D 10 3D 10 43 10 49   47. 	fdb	SUB4,SUB5,SUB6,SUB7
       10 4F            
001025                     48. 	
                           49. ;---------------------------------
                           50. ;	Subrutiner för test
                           51. 
       0000 0400           52. OutPortM	equ	$400
                           53. 
001025 18 0B 00 04 00      54. SUB0	movb	#0,OutPortM
00102A 3D                  55. 	rts
00102B 18 0B 00 04 00      56. SUB1	movb	#0,OutPortM
001030 3D                  57. 	rts
001031 18 0B 00 04 00      58. SUB2	movb	#0,OutPortM
001036 3D                  59. 	rts
001037 18 0B 00 04 00      60. SUB3	movb	#0,OutPortM
00103C 3D                  61. 	rts
00103D 18 0B 00 04 00      62. SUB4	movb	#0,OutPortM
001042 3D                  63. 	rts
001043 18 0B 00 04 00      64. SUB5	movb	#0,OutPortM
001048 3D                  65. 	rts
001049 18 0B 00 04 00      66. SUB6	movb	#0,OutPortM
00104E 3D                  67. 	rts
00104F 18 0B 00 04 00      68. SUB7	movb	#0,OutPortM
001054 3D                  69. 	rts
001055                     70. 		
                           71. ;-------------------------------
                           72. ;	File uses
                           73. ;-------------------------------	
001055                     74. 	
001055                     75. 	;use	ML15drvr.s12
                           76. 	use	KeyboardML15.s12
---- File: "KeyboardML15.s12"
                           77. ;Testprogram
001000                     78. 	org	$1000
                           79. ;start:	jsr	GetKbdML15
                           80. ;	cmpb	#$FF
                           81. ;	beq	start
                           82. ;	nop
                           83. ;	bra	start
001000 CE 10 08            84. 	ldx	#tabell
001003 16 10 26            85. start:	jsr	DisplayML15
001006 20 FB               86. 	bra	start
                           87. ;
001008 01 02 03 04 05 06   88. tabell:	fcb	1,2,3,4,5,6
                           89. 
00100E                     90. 	
00100E                     91. CheckKbdML15:
00100E F6 09 C0            92. 	ldab	$9c0
001011 2A 03               93. 	bpl	CheckKbd_VA
001013 C6 FF               94. 	ldab	#$FF	
001015 3D                  95. 	rts
001016                     96. CheckKbd_VA:
001016 37                  97. 	pshb
001017                     98. CheckKbd_VA_active:
001017 F6 09 C0            99. 	ldab	$9c0
00101A 2A FB              100. 	bpl	CheckKbd_VA_active
00101C 33                 101. 	pulb
00101D 3D                 102. 	rts
00101E                    103. 	
00101E                    104. GetKbdML15:
00101E 16 10 0E           105. 	jsr	CheckKbdML15
001021 C1 FF              106. 	cmpb	#$FF
001023 26 F9              107. 	bne	GetKbdML15
001025 3D                 108. 	rts
001026                    109. 	
001026                    110. DisplayML15:
001026 86 01              111. 	ldaa	#1
001028 7A 09 C2           112. 	staa	$9c2
00102B 86 D0              113. 	ldaa	#$d0
00102D 7A 09 C3           114. 	staa	$9c3
001030 86 00              115. 	ldaa	#0
001032 7A 09 C2           116. 	staa	$9c2
001035                    117. DisplayML15_compare_loop:
001035 81 06              118. 	cmpa	#6
001037 26 09              119. 	bne	DisplayML15_not_6
001039 86 00              120. 	ldaa	#0
00103B 7A 09 C3           121. 	staa	$9c3
00103E 7A 09 C3           122. 	staa	$9c3
001041 3D                 123. 	rts
001042                    124. DisplayML15_not_6
001042                    125. 	ldab	a,x
001044 7B 09 C3           126. 	stab	$9c3
001047 42                 127. 	inca
001048 20 EB              128. 	bra	DisplayML15_compare_loop
                          129. 
00104A                    130. 	
00104A                    131. 	                          132. 	use	Delay.s12
---- File: "Delay.s12"
00104A                    133. #ifdef	RUNFAST
                          135. #else
       0000 0001          136. DelayConstant	equ	1	;Minimum number for the constant, the delay will however be too long
                          137. #endif
00104A                    138. 	
002000                    139. 	org	$2000
"Delay.s12" line 8, ERROR: Multiple definition
002000                    140. Delay:	pshx
002000 35                 141. 	pshy
002001 CE 00 01           142. 	ldx	#DelayConstant
"Delay.s12" line 11, ERROR: Multiple definition
002004                    143. NEXT:	leax	-1,x
002004 CD 00 64           144. 	ldy	#100
"Delay.s12" line 13, ERROR: Multiple definition
002007                    145. NEXT2:	leay	-1,y
002007 8D 00 00           146. 	cpy	#0
00200A 26 FE              147. 	bne	NEXT2
00200C 8E 00 00           148. 	cpx	#0
00200F 26 F4              149. 	bne	NEXT
002011 31                 150. 	puly
002012 30                 151. 	pulx
002013 3D                 152. 	rts	                          153. 	use	Subroutines.s12
---- File: "Subroutines.s12"
                          154. 		#define	SIMUATOR
                          155. 		use	Labdefs.s12
---- File: "Labdefs.s12"
                          156. ;Adresser
       0000 0600          157. DipSwitch	equ	$600
       0000 0700          158. HexDisplay	equ	$700
       0000 0400          159. DrillControl	equ	$400
       0000 0401          160. DrillStatus	equ	$401
                          161. 
002014                    162. #ifdef	SIMULATOR
                          168. #else
       0000 0004          169. DelayConst	EQU	4
                          170. #endif                          171. 		use	Delay.s12
---- File: "Delay.s12"
002014                    172. #ifdef	RUNFAST
                          174. #else
       0000 0001          175. DelayConstant	equ	1	;Minimum number for the constant, the delay will however be too long
                          176. #endif
002014                    177. 	
002000                    178. 	org	$2000
"Delay.s12" line 8, ERROR: Multiple definition
002000                    179. Delay:	pshx
002000 35                 180. 	pshy
002001 CE 00 01           181. 	ldx	#DelayConstant
"Delay.s12" line 11, ERROR: Multiple definition
002004                    182. NEXT:	leax	-1,x
002004 CD 00 64           183. 	ldy	#100
"Delay.s12" line 13, ERROR: Multiple definition
002007                    184. NEXT2:	leay	-1,y
002007 8D 00 00           185. 	cpy	#0
00200A 26 FE              186. 	bne	NEXT2
00200C 8E 00 00           187. 	cpx	#0
00200F 26 F4              188. 	bne	NEXT
002011 31                 189. 	puly
002012 30                 190. 	pulx
002013 3D                 191. 	rts	       0000 0401          192. InPort		equ	$0401	; Läsa in?
---- File: "Subroutines.s12"
                          193. ;OutPort		equ	$0400	; Läsa in?
                          194. 
001000                    195. 		org	$1000	
001000 00                 196. DCShadow	rmb	1	; DrillControl shadow
001001 C6 00              197. Start:		ldab	#$00
001003 7B 10 00           198. 		stab	DCShadow
001006                    199. 		
001006 F6 04 01           200. Loop:		ldab	InPort
001009 16 10 31           201. 		jsr	Outone
00100C                    202. 		
00100C B6 10 00           203. 		ldaa	DCShadow
00100F                    204. 		;staa	OutPort
00100F                    205. 		
00100F 06 10 01           206. 		jmp	Start		
001012                    207. 		
                          208. ;---------------------------------
                          209. ;	OUTZERO
                          210. ;---------------------------------
                          211. ; Nollställ biten i B-registrer, med förprogrammerade bitmönster
001012 36                 212. Outzero:	psha			; Lägg register på stacken för senare återställning
001013 39                 213. 		pshc	
001014 37                 214. 		pshb
001015 C1 07              215. 		cmpb	#7		
001017 22 14              216. 		bhi	Outzero_return	; Kolla om talet är >7
001019 CE 10 74           217. 		ldx	#Bitmask
00101C                    218. Outzero_loop:
00101C                    219. 		ldab	b,x
00101E 51                 220. 		comb	
00101F 37                 221. 		pshb
001020 B6 10 00           222. 		ldaa	DCShadow
001023                    223. 		anda	0,sp		; Ta DCShadow && B
001025 1B 81              224. 		leas	1,sp
001027 7A 04 00           225. 		staa	DrillControl	; Spara till borren
00102A 7A 10 00           226. 		staa	DCShadow	; Spara till skuggningen
00102D                    227. Outzero_return:	
00102D 33                 228. 		pulb			; Återställ originalvärden
00102E 38                 229. 		pulc
00102F 32                 230. 		pula
001030 3D                 231. 		rts
001031                    232. 	
                          233. ;---------------------------------
                          234. ;	OUTONE
                          235. ;---------------------------------
                          236. 
                          237. ; Ettställ biten i B-registrer, med förprogrammerade bitmönster
001031 36                 238. Outone:		psha			; Lägg register på stacken för senare återställning
001032 39                 239. 		pshc	
001033 37                 240. 		pshb
001034 C1 07              241. 		cmpb	#7		
001036 22 13              242. 		bhi	Outone_return	; Kolla om talet är >7
001038 CE 10 74           243. 		ldx	#Bitmask
00103B                    244. Outone_loop:
00103B                    245. 		ldab	b,x	
00103D 37                 246. 		pshb
00103E B6 10 00           247. 		ldaa	DCShadow
001041                    248. 		oraa	0,sp		; Ta DCShadow || B
001043 1B 81              249. 		leas	1,sp
001045 7A 04 00           250. 		staa	DrillControl	; Spara till borren
001048 7A 10 00           251. 		staa	DCShadow	; Spara till skuggningen
00104B                    252. Outone_return:	
00104B 33                 253. 		pulb			; Återställ originalvärden
00104C 38                 254. 		pulc
00104D 32                 255. 		pula
00104E 3D                 256. 		rts
00104F                    257. 		
                          258. ;-------------------------------
                          259. ;	MOTORSTART
                          260. ;-------------------------------
                          261. 
00104F                    262. MotorStart:
00104F 36                 263. 	psha
001050 B6 10 00           264. 	ldaa	DCShadow
001053 84 04              265. 	anda	#4
001055 26 12              266. 	bne	MotorStartExit	; Motorn redan startad
001057 86 02              267. 	ldaa	#2
001059 36                 268. 	psha
00105A 16 10 31           269. 	jsr	Outone		; Ettställ bit 2	
00105D 16 20 00           270. 	jsr	Delay		; 4*250ms fördröjning
001060 16 20 00           271. 	jsr	Delay
001063 16 20 00           272. 	jsr	Delay
001066 16 20 00           273. 	jsr	Delay
                          274. 
001069                    275. MotorStartExit:
001069 32                 276. 	pula
00106A 3D                 277. 	rts
                          278. ;-------------------------------
                          279. ;	MOTORSTOP
                          280. ;-------------------------------
                          281. 
00106B                    282. MotorStop:
00106B 36                 283. 	psha
00106C 86 02              284. 	ldaa	#2
00106E 36                 285. 	psha
00106F 16 10 12           286. 	jsr	Outzero		; Nollställ bit 2
001072 32                 287. 	pula
001073 3D                 288. 	rts
001074                    289. 	
                          290. ;-------------------------------	
                          291. ;	Bitmasks
                          292. ;-------------------------------
                          293. 
001074 01 02 04 08 10 20  294. Bitmask:	fcb	1,2,4,8,16,32,64,128
       40 80            
00107C                    295. 		
                          296. 
00107C                    297. 		
00107C                    298. 	
00107C                    299. 		
00107C                    300. 		00107C                    301. 	
---- File: "C:\Users\Erik\Documents\GitHub\PIS\Bokuppgifter\Main.s12"
                          302. ;------------------------------
                          303. ;	Globala variabler
                          304. ;------------------------------
                          305. 
00107C                    306. 	

****** Total Errors: 6
