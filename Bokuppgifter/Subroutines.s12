#define	SIMUATOR
#define	RUNFAST
		use	Labdefs.s12
		use	Delay.s12

DCShadow	rmb	1	; DrillControl shadow	
		
;---------------------------------
;	OUTZERO
;---------------------------------

; Nollst√§ll biten i B-registret, med f√∂rprogrammerade bitm√∂nster

Outzero:			
		pshc	; L√§gg register p√• stacken f√∂r senare √•terst√§llning
		pshb
		cmpb	#7		
		bhi	Outzero_return	; Kolla om talet √§r >7
		ldx	#Bitmask
Outzero_loop:
		ldab	b,x				; Uppdatera b till bitmasken f√∂r b
		comb	
		andb	DCShadow		; Ta DCShadow && komplementet av bitmasken
		stab	DrillControl	; Spara till borren
		stab	DCShadow	; Spara till skuggningen
Outzero_return:	
		pulb			; √Öterst√§ll originalv√§rden
		pulc
		rts
	
;---------------------------------
;	OUTONE
;---------------------------------

; Ettst√§ll biten i B-registret, med f√∂rprogrammerade bitm√∂nster

Outone:			
		pshc	; L√§gg register p√• stacken f√∂r senare √•terst√§llning
		pshb
		cmpb	#7		
		bhi	Outone_return	; Kolla om talet √§r >7
		ldx	#Bitmask
Outone_loop:
		ldab	b,x	
		orab	DCShadow	; Ta DCShadow || Bitmasken
		stab	DrillControl	; Spara till borren
		stab	DCShadow	; Spara till skuggningen
Outone_return:	
		pulb			; √Öterst√§ll originalv√§rden
		pulc
		rts
		
;-------------------------------
;	MOTORSTART
;-------------------------------

MotorStart:
	pshb
	pshc
	ldab	DCShadow
	andb	#4
	bne	MotorStartExit	; Motorn redan startad
	ldab	#2
	jsr	Outone		; Ettst√§ll bit 2
	
	ldab	#2
	jsr	DELAY_B	; 4*250 ms delay

MotorStartExit:
	pulc
	pulb
	rts
	
;-------------------------------
;	MOTORSTOP
;-------------------------------

MotorStop:
	pshb
	pshc
	ldab	#2
	jsr	Outzero		; Nollst√§ll bit 2
	pulc
	pulb
	rts
	
;-------------------------------
;	DRILLDOWN
;-------------------------------

DrillDown:
	pshb
	pshc
	ldab	#3		; Bit nummer 3 ‰r vridmagneten
	jsr	Outone		; Ettst‰ll denna
	pulc
	pulb
	rts
	
;-------------------------------
;	DRILLUP
;-------------------------------

DrillUp:
	pshb
	pshc
	ldab	#3		; Bit nummer 3 ‰r vridmagneten
	jsr	Outzero		; Nollst‰ll denna
	pulc
	pulb
	rts
	
;-------------------------------
;	ALARM
;-------------------------------

; Antalet alarm ska finnas i B-registret

Alarm:
	pshc
	tfr	b,a
	tsta
	beq	AlarmReturn
			; Bit nummer 4 ‰r larm
AlarmSend:
	ldab	#4		; S‰tt pÂ alarm
	jsr	Outone
	
	ldab	#4
	jsr	DELAY_B		; 4*250 ms delay
	
	ldab	#4		; St‰ng av alarm
	jsr	Outzero
	
	deca			
	beq	AlarmReturn
	
	ldab	#2		; 2*250 ms delay
	jsr	DELAY_B
	
	bra	AlarmSend
AlarmReturn:
	pulc
	rts
	
	
	
	


;-------------------------------	
;	Bitmasks
;-------------------------------

Bitmask:	fcb	1,2,4,8,16,32,64,128
		

		
	
		
		
