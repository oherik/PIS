	#define	SIMULATOR
	#define	RUNFAST
	
	use	Labdefs.s12
	
IrqVector	equ	$3ff2
Stack_Drill	equ	$3000
Stack_Display	equ	$3100

	org	$1000
	
main:
; Ladda borrens stack
	lds	#Stack_Drill
; Avbrottsvektor, go!
	ldx	#IrqR
	stx	IrqVector
; Nolla gamla interrupts
	clr	ML19_AckIrq_1
	clr	ML19_AckIrq_2
; Gör så att avbrott tillåts (sätt i = 0)
	cli	
	
Main:	
	jsr	Process_Drill	; Börja med borrprocessen

Process_Drill:
	;jsr	Drill_main	; Borrens huvudprogram
	inc	Var2
	movb	Var2,$c01
	bra	Process_Drill

Process_Display
	;jsr	DISPLAY
	inc	Var1
	movb	Var1,$c00
	bra	Process_Display

; Avbrottsrutin
IrqR:	
	pshc
	pshb
	psha
	pshx
	pshy
	
	inc	ProcCounter+1
	ldd	ProcCounter
	ldx	#2
	idiv
	std	ProcCounter
	
	tstb		
	beq	IrqR_Drill
; Display
	sts	SPS_Display		;Spara stackpekaren
	lds	#Stack_Drill
	clr	ML19_AckIrq_1
	rti
	
; Borr	
IrqR_Drill:
	sts	SPS_Drill		;Spara stackpekaren
	lds	#Stack_Display
	clr	ML19_AckIrq_1
	rti
	
; Filer
	use	Drill.s12
	use	Display_Ml5.s12

; Variabler
ProcCounter	fdb	0
Var1:	rmb	1
Var2:	rmb	1
	
; Stacks
;----------------------------------
	; Borr
	org	Stack_Drill
	fcb	$c0	;CC	(börjar med i=0)
	fcb	0	;B
	fcb	0	;A
	fdb	0	;X
	fdb	0	;Y
	fdb	Process_Drill	
SPS_Drill:	rmb	2	;PC (börjar på borrens process)
	;Display
	org	Stack_Display
	fcb	$c0	;CC	(börjar med i=0)
	fcb	0	;B
	fcb	0	;A
	fdb	0	;X
	fdb	0	;Y
	fdb	Process_Display	
SPS_Display:	rmb	2	;PC (börjar på displayens process)